
name: snowflake-devops-demo

# Controls when the action will run.
on:
    workflow_call:
      inputs:
        DRY_RUN:
          required: false
          type: string
        SF_DATABASE:
          required: true
          type: string
        LOCATION_OF_DDL_SCRIPTS:
          required: true
          type: string
      secrets:
        SF_ACCOUNT:
          required: true
        SF_USERNAME:
          required: true
        SF_ROLE:
          required: true
        SF_WAREHOUSE:
          required: true
        SF_PASSWORD:
          required: true

jobs:
    deploy-snowflake-changes-job:
        runs-on: ubuntu-latest

        env:
            SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
            SF_USERNAME: ${{ secrets.SF_USERNAME }}
            SF_ROLE: ${{ secrets.SF_ROLE }}
            SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
            SF_DATABASE: ${{ inputs.SF_DATABASE }}
            SF_PASSWORD: ${{ secrets.SF_PASSWORD }}

        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Use Python 3.12
              uses: actions/setup-python@v5
              with:
                  python-version: 3.12

            - name: Create and populate connections.toml
              run: |
                  echo "Current Directory: ${PWD}"
                  echo "GITHUB WORKSPACE: ${GITHUB_WORKSPACE}"
                  chmod +x populateConnection.sh
                  bash populateConnection.sh

            - name: Install dependencies
              run: |
                  echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
                  python --version
                  echo "Step 1: Installing schemachange"
                  python -m pip install --upgrade pip
                  python -m pip install schemachange

            - name: "Deploying Schemachange on database: ${{ inputs.SF_DATABASE }}"
              run: |
                  echo "Step 2: Deploying schemachange on database: ${{ inputs.SF_DATABASE }}"
                  schemachange \
                    --root-folder ./${{ inputs.LOCATION_OF_DDL_SCRIPTS }} \
                    --connections-file-path ./connections.toml \
                    --connection-name default \
                    --change-history-table $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY \
                    --create-change-history-table \
                    ${{ inputs.DRY_RUN }} \
                    --verbose 
                    RESULT=$?

                  if [ $RESULT -eq 0 ]; then
                      echo "Deployment Completed!"
                  else
                      echo "Deployment Failed."
                  fi                  

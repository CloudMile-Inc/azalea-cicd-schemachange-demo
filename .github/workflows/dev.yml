name: dev-pytest

defaults:
  run:
    shell: bash

on:
    workflow_dispatch:
    workflow_call:
        inputs:
            config-path:
              required: true
              type: string
        secrets:
            personal_access_token:
                required: true

    pull_request:
        types:
            - labeled
        branches:
            - dev

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        scenario-name: [ 'basics_demo']
        os: ["ubuntu-latest"]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.label.name == 'ci-run-tests' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

    env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_ROLE: DEMO_SCHEMACHANGE_ADMIN
        SNOWFLAKE_WAREHOUSE: DEMO_SCHEMACHANGECOMPUTE_WH
        SNOWFLAKE_DATABASE: DEMO_SCHEMACHANGE
        MY_TARGET_SCHEMA: ${{ matrix.scenario-name }}_${{ github.run_number }}_${{ strategy.job-index }}
        SCENARIO_NAME: ${{ matrix.scenario-name }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # The next few steps (Install dependencies, Lint with Flake8, Test with Pytest) will install Python dependencies,
      # run tests and lint with a variety of Python versions
      # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install schemachange
          python -m pip install -e .[dev]
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Create and populate connections.toml
        run: |
          echo "Current Directory: ${PWD}"
          echo "GITHUB WORKSPACE: ${GITHUB_WORKSPACE}"
          chmod +x populateConnection.sh
          bash populateConnection.sh
        working-directory: .
      - name: Deploying Schemachange on ${{ matrix.os }} targeting ${{ env.SNOWFLAKE_DATABASE }}.${{ env.MY_TARGET_SCHEMA }} schema
        run: |
          echo "Current Directory: ${PWD}"
          echo "GITHUB WORKSPACE: ${GITHUB_WORKSPACE}"
          chmod +x testSchemachange.sh
          bash testSchemachange.sh
        working-directory: .